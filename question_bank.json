[
    {
      "id": "Q1: Top 3 Customers with Most Points",
      "question_description": "Select the full name and the number of points of the top 3 customers that have the most points starting with the customer with the most points.",
      "table_details": {"Schema(s) used": ["sql_store"], "Table(s) involved": [["customers"]]},
      "all_tables": ["sql_store.customers"],
      "column_types":[{"first_name": "VARCHAR", "last_name": "VARCHAR", "points": "INT"}],
      "correct_answer": "SELECT first_name || ' ' || last_name AS full_name, points FROM sql_store.customers ORDER BY points DESC LIMIT 3"
    },
    {
        "id": "Q2: Unique states of residence for all customers",
        "question_description": "Count the total number of distinct states that all customers are from.",
        "table_details": {"Schema(s) used": ["sql_store"], "Table(s) involved": [["customers"]]},
        "all_tables": ["sql_store.customers"],
        "column_types":[{"state": "CHAR(2)"}],
        "correct_answer": "SELECT COUNT(DISTINCT state) AS num_distinct_states FROM sql_store.customers"
    },
    {
        "id": "Q3: Get product names from product id in order items",
        "question_description": "Select the order id, product id, product name, order item quantity and order item unit price by merging the 2 tables from the schemas of `sql_inventory` and `sql_store` together.",
        "table_details": {"Schema(s) used": ["sql_store", "sql_inventory"], "Table(s) involved": [["order_items"], ["products"]]},
        "all_tables": ["sql_store.store.order_items", "sql_inventory.products"],
        "column_types":[{"order_id": "INT", "product_id": "INT", "quantity": "INT", "unit_price": "REAL"}, {"product_id": "INT", "name": "VARCHAR"}],
        "correct_answer": "SELECT order_id, p.product_id, p.name, quantity, oi.unit_price FROM sql_store.order_items oi JOIN sql_inventory.products p ON oi.product_id = p.product_id"
    }
  ]
  
